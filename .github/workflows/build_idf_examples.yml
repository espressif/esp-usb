# This workflow builds esp-idf examples:
#
#   - usb device examples: with overridden esp_tinyusb from esp-usb/device/esp_tinyusb
#     - Only IDF Latest
#
#   - usb host examples: with overridden usb component from esp-usb/host/usb
#     - Only service IDF releases

name: Build ESP-IDF USB examples

on:
  pull_request:
    types: [opened, reopened]

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        idf_ver:
          [
            "release-v5.1",
            "release-v5.2",
            "release-v5.3",
            "release-v5.4",
            "release-v5.5",
            "latest",
          ]
    runs-on: ubuntu-latest
    container: espressif/idf:${{ matrix.idf_ver }}
    env:
      CONFIG_PATH: ${{ github.workspace }}/.github/ci/.idf_build_examples_config.toml
      MANIFEST_PATH: ${{ github.workspace }}/.github/ci/.idf-build-examples-rules.yml
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Install Python deps
        shell: bash
        run: |
          . ${IDF_PATH}/export.sh
          pip install idf-component-manager>=2.1.2 idf-build-apps==2.12.2 pyyaml --upgrade
      - name: Build ESP-IDF ${{ matrix.idf_ver }} USB examples
        shell: bash
        run: |
          . ${IDF_PATH}/export.sh

          python .github/ci/override_managed_component.py esp_tinyusb device/esp_tinyusb ${IDF_PATH}/examples/peripherals/usb/device/*
          python .github/ci/override_managed_component.py usb host/usb ${IDF_PATH}/examples/peripherals/usb/host/*
          cd ${IDF_PATH}

          idf-build-apps find --config-file ${CONFIG_PATH} --manifest-file ${MANIFEST_PATH}
          idf-build-apps build --config-file ${CONFIG_PATH} --manifest-file ${MANIFEST_PATH}
